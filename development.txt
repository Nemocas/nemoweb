<h2>Development</h2>

<h3>Source (git repositories)</h3>

<h4>Nemo</h4>

<p>You can get a clone of the git development repo with:</p> 

<pre>git clone https://github.com/Nemocas/Nemo.jl.git</pre> 
 
<p>If you want to browse the repository online, or fork it on GitHub, it can be accessed here:
<a href="https://github.com/Nemocas/Nemo.jl">https://github.com/Nemocas/Nemo.jl</a></p>
<p>The GitHub issue tracker can be accessed here:
<a href="https://github.com/Nemocas/Nemo.jl/issues">https://github.com/Nemocas/Nemo.jl/issues</a></p>
 
<p>The current development branch within the repository is "master".</p> 

<h4>AbstractAlgebra</h4>

<p>Work on generic algorithms and structures is done within the
AbstractAlgebra.jl project, which Nemo uses for all its generic
functionality.</p>

<pre>git clone https://github.com/Nemocas/AbstractAlgebra.jl.git</pre>

<p>If you want to browse the repository online, or fork it on GitHub, it can
be accessed here:
<a href="https://github.com/Nemocas/AbstractAlgebra.jl">https://github.com/Nemocas/AbstractAlgebra.jl</a></p>
<p>The GitHub issue tracker can be accessed here:
<a href="https://github.com/Nemocas/AbstractAlgebra.jl/issues">https://github.com/Nemocas/AbstractAlgebra.jl/issues</a></p>

<p><a href="https://github.com/Nemocas">Nemocas</a> is a community organization on GitHub managed by four individuals who can accept pull requests. To contribute to Nemo, simply issue a pull request against the GitHub repository above or open an issue on the GitHub issue tracker.</p>

<h3>Mailing list</h3>

<p>You are welcome to come and join the community of volunteers at our Google development
group:</p> 
<a href="http://groups.google.com/group/nemo-devel">nemo-devel Google Group</a>

<h3>Development ideas</h3>
 
<p>Here is a list of ideas for development projects that would be highly valuable to a large
number of users. Some of these could make good student projects (or in some cases, research projects).
</p>

<ul>
<li>Implement multivariate rational functions</li>
<li>Implement generic Puiseux series with automatic inflation/deflation</li>
<li>Add the capped absolute model of power series for more modules</li>
<li>Implement versions of Laurent series that use Flint</li>
<li>Implement generic Hermite Normal Form and Popov form</li>
<li>Interface with Gap or wrap libgap</li>
<li>Implement symbolic expressions</li>
<li>Implement sparse matrix algorithms</li>
<li>Implement fast representation for small finite fields (possibly in Flint)</li>
<li>Wrap Singular for Groebner basis, ideal and integral kernel operations</li>
<li>Implement factoring of multivariate polynomials</li>
<li>Implement charpoly and minpoly for number fields (possibly in Antic)</li>
<li>Implement modular gcd algorithm for multivariate polynomials over the integers</li>
<li>Implement modular algorithms for number fields (possibly in Antic)</li>
<li>Implement generic Jordan canonical form and rational canonical form</li>
<li>Fast p-adic nullspace kernel vector lifting (possibly in Flint)</li>
<li>Implement generic Smith normal form over a PID</li>
<li>Implement generic QR factorisation</li>
<li>BKZ reduction (possibly in Flint)</li>
<li>Implement Howell normal form</li>
<li>Wrap Flint Zech logarithm modules</li>
<li>Wrap Flint modules for matrices over finite fields and QQ</li>
<li>Faster immutable type for Z/nZ for small n</li>
<li>Implement Frobenius normal form</li>
<li>Implement fallback generic Sylvester matrix resultant</li>
<li>Implement generic O(n^3) minpoly.</li>
</ul>

<p>
A longer list of (mostly minor) issues to work on can be found in the
<a href="https://github.com/wbhart/nemo.jl/blob/master/todo.txt">todo.txt</a> file.
If you are interested in contributing to Nemo in any way,
or even just want to request a feature,
don't hesitate to leave a message on the mailing list!</p>

